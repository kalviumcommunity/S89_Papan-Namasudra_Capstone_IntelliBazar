/* Voice Search Animations */

/* Pulse animation for listening state */
@keyframes voicePulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 10px rgba(239, 68, 68, 0);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0);
  }
}

/* Microphone listening animation */
.voice-listening {
  animation: voicePulse 1.5s infinite;
}

/* Ripple effect for microphone button */
@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

.voice-ripple {
  position: relative;
  overflow: hidden;
}

.voice-ripple::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(239, 68, 68, 0.5);
  transform: translate(-50%, -50%);
  animation: ripple 0.6s linear;
}

/* Fade in animation for status messages */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.voice-status {
  animation: fadeInUp 0.3s ease-out;
}

/* Breathing animation for search input when listening */
@keyframes breathe {
  0%, 100% {
    border-color: rgba(239, 68, 68, 0.3);
    box-shadow: 0 0 0 1px rgba(239, 68, 68, 0.1);
  }
  50% {
    border-color: rgba(239, 68, 68, 0.6);
    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.2);
  }
}

.voice-input-listening {
  animation: breathe 2s ease-in-out infinite;
}

/* Success animation */
@keyframes checkmark {
  0% {
    transform: scale(0) rotate(45deg);
    opacity: 0;
  }
  50% {
    transform: scale(1.2) rotate(45deg);
    opacity: 1;
  }
  100% {
    transform: scale(1) rotate(45deg);
    opacity: 1;
  }
}

.voice-success {
  animation: checkmark 0.5s ease-out;
}

/* Error shake animation */
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-2px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(2px);
  }
}

.voice-error {
  animation: shake 0.5s ease-in-out;
}

/* Microphone icon glow effect */
@keyframes glow {
  0%, 100% {
    filter: drop-shadow(0 0 2px rgba(239, 68, 68, 0.5));
  }
  50% {
    filter: drop-shadow(0 0 8px rgba(239, 68, 68, 0.8));
  }
}

.voice-glow {
  animation: glow 2s ease-in-out infinite;
}

/* Accessibility improvements */
.voice-button:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.voice-button:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .voice-listening {
    border: 2px solid #000;
  }
  
  .voice-status {
    background: #fff;
    border: 1px solid #000;
    padding: 2px 4px;
    border-radius: 4px;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .voice-listening,
  .voice-ripple::before,
  .voice-input-listening,
  .voice-glow {
    animation: none;
  }
  
  .voice-listening {
    background-color: #ef4444;
    color: white;
  }
}
